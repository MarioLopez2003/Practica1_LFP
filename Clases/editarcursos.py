from tkinter import *
from tkinter import messagebox
from cursos import Cursos
class editarcursos(Tk):
    def __init__(self):
        super().__init__()
        self.title("Editar Cursos")
        self.geometry("400x500")
        self.config(bg = "skyblue")
        self.resizable(False, False)
        LCodigo = Label(self, text="Codigo")
        LCodigo.place(x = 50, y = 20)
        txtcodigo = StringVar()
        Codigo = Entry(self, textvariable = txtcodigo, width = "30")
        Codigo.place(x = 180, y = 20)
        LNombre = Label(self, text = "Nombre")
        LNombre.place(x = 50, y = 80)
        txtnombre = StringVar()
        Nombre = Entry(self, textvariable = txtnombre, width = "30")
        Nombre.place(x = 180, y = 80)
        Lpre = Label(self, text = "Pre Requisito")
        Lpre.place(x = 50, y = 140)
        txtrequisito = StringVar()
        Prerequisito = Entry(self, textvariable = txtrequisito, width = "30")
        Prerequisito.place(x = 180, y = 140)
        LSemestre = Label(self, text = "Semestre")
        LSemestre.place(x = 50, y = 200)
        txtsemestre = StringVar()
        Semestre = Entry(self, textvariable = txtsemestre, width ="30")
        Semestre.place(x = 180, y = 200)
        LOpcion = Label(self, text = "Opcionalidad")
        LOpcion.place(x = 50, y = 260)
        txtopcion = StringVar()
        Opcion = Entry(self, textvariable = txtopcion, width = "30")
        Opcion.place(x = 180, y = 260)
        LCreditos = Label(self, text = "Creditos")
        LCreditos.place(x = 50, y = 320)
        txtcreditos = StringVar()
        Creditos = Entry(self, textvariable = txtcreditos, width = "30")
        Creditos.place(x = 180, y = 320)
        LEstado = Label(self, text = "Estado")
        LEstado.place(x = 50, y = 380)
        txtestado = StringVar()
        Estado = Entry(self, textvariable = txtestado, width = "30")
        Estado.place(x = 180, y = 380)
        def regresar():
            self.destroy()
        def editar_curso():
            cod = Codigo.get()
            nombre = Nombre.get()
            requisito = Prerequisito.get()
            opcion = Opcion.get()
            semestre = Semestre.get()
            creditos = Creditos.get()
            estado = Estado.get()
            lista = []
            for curso in Cursos.listadoCursos:
                if cod.strip() == curso[0].strip():
                    Cursos.listadoCursos.remove(curso)
                if int(opcion.strip()) != 0 and int(opcion.strip()) !=1:
                    return messagebox.showerror("Error", "Dato Invalido para la opcion" +"\n" + "(Solo 0 y 1 son validos)")
                if int(estado.strip()) !=-1 and int(estado.strip()) != 0 and int(estado.strip()) != 1:
                    return messagebox.showerror("Error", "Dato Invalido para el estado"+ "\n" + "(Solo -1, 0 y 1 son validos)")
                limpiar()
            lista.append(cod)
            lista.append(nombre)
            lista.append(requisito)
            lista.append(opcion)
            lista.append(semestre)
            lista.append(creditos)
            lista.append(estado)
            Cursos.listadoCursos.append(lista)
            messagebox.showinfo("Edicion Cursos", "Curso " + cod + " Editado Correctamente")
            self.focus()
            limpiar()
        
        def buscar_curso():
            for lista in Cursos.listadoCursos:
                if str(Codigo.get()) in lista[0]:
                    Nombre.insert(0, lista[1])
                    Prerequisito.insert(0, lista[2])
                    Opcion.insert(0, lista[3])
                    Semestre.insert(0, lista[4])
                    Creditos.insert(0, lista[5])
                    Estado.insert(0, lista[6])

        btnBuscar = Button(self, text = "Buscar", command = buscar_curso)
        btnBuscar.place(x = 60, y =450)
        def limpiar():
            Codigo.delete(0, 'end')
            Nombre.delete(0, 'end')
            Prerequisito.delete(0, 'end')
            Opcion.delete(0, 'end')
            Semestre.delete(0, 'end')
            Creditos.delete(0, 'end')
            Estado.delete(0, 'end')
        btnLimpiar = Button(self, text = "Limpiar", command = limpiar)
        btnLimpiar.place(x = 120, y = 450)
        btnEditar = Button(self, text = "Editar", command = editar_curso)
        btnEditar.place( x = 200, y = 450)
        btnRegresar = Button(self, text = "Regresar", command = regresar)
        btnRegresar.place( x = 300, y = 450)